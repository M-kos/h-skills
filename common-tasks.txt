1. что происходит когда вводим адрес, стадии запроса
https://habr.com/ru/companies/skillfactory/articles/678400/
https://habr.com/ru/articles/726292/

Junior
2. Порядок загрузки и рендеринга в браузере
DOM,CSSOM -> Render Tree -> Layout -> Paint -> Compositing
https://habr.com/ru/companies/skillfactory/articles/678400/
https://habr.com/ru/articles/726292/
Стили могут блокировать парсинг, если они не загружены и есть блокирующий скрипт, скрипт будет ждать когда загрузятся стили. Стили блокируют рендеринг
картини - не бллокируют парсинг и рендеринг

3. Из чего состоит запрос
Метод, URL, версия HTTP, заголовки, тело

4. HTTP1, HTTP2, HTTPS
http1 - текст, http2 - бинарные данные
http1 - ресурсы загружаются последовательно, http2 - ресурсы загружаются параллельно (мультиплексирование)
http2 - server push: функция, которая позволяет серверу начать передачу ресурсов на клиент ещё до запроса.
https://habr.com/ru/companies/timeweb/articles/751338/

5. Коды ответа
1хх - информационные
2хх - успешная обработка
3хх - редирект
4хх - проблема на стороне клиента
5хх - проблема на стороне сервера

6. localstorage и sessionstorage
sessionStorage - существует только в рамках текущей вкладки браузера
sessionStorage - данные продолжают существовать после перезагрузки страницы, но не после закрытия/открытия вкладки

7. Флаги у куков (secure, httponly)
Secure: Может быть установлен либо в true, либо в false. Если установлено значение true, cookie будет отправляться только при соединении HTTPS. Это может быть использовано для снижения риска атаки MITM, при которой злоумышленник заставляет пользователя просматривать сайт по протоколу HTTP. Если этот флаг установлен, cookie не будет передаваться по HTTP.
HttpOnly: Если установлено значение true, JavaScript на стороне клиента не сможет получить доступ к файлу cookie. Это может быть использовано для сохранения cookie от XSS-атаки, которая крадет cookie. Таким образом, javascript на стороне клиента не сможет получить доступ к cookie.
Domain: Содержит домен или поддомен, на который может быть отправлен файл cookie.
Path: На каждом пути могут быть разные вещи. Если разработчик хочет установить разные cookie для каждого пути, он может использовать атрибут path для достижения этой цели.
Expires: Используется для определения срока действия cookie.
SamePath: Используется для определения условий, когда cookie могут быть отправлены при межсайтовых запросах.

Middle
8. Какими способами можем отправить запрос на сервер из браузера? (fetch, прямо из формы, xmlhttprequest, websocket, link, script, iframe)

9. long poling, poling

10. авторизация, аутентификация (jwt, oauth)
Аутентификация проверяет личность пользователя, чтобы убедиться, что он является авторизованным пользователем организации. Затем авторизация определяет уровень доступа пользователя к ресурсам организации

11. Уязвимости браузера (xss, cors, csrf)
csrf (cross-site request forgery) - ссылка на сайт с вредоносным кодом, который может что то сделать от нашего имени. Защита: csrf-token
xss - экранировать, прятать куки под httponly
cors - заголовки: Access-Control-Allow-Origin 
Content Security Policy (CSP) - это дополнительный уровень безопасности, позволяющий распознавать и устранять определённые типы атак, таких как Cross Site Scripting (XSS (en-US)) и атаки внедрения данных. Спектр применения этих атак включает, но не ограничивается кражей данных, подменой страниц и распространением зловредного ПО.

12. cqrs
13. Performance внутри брузера
14. webRtc

Senior
15. CDN
16. Сжатие в браузере
17. Паттерны, что применял?
18. Graphql?

Не успели
webpack, настройка
ssr